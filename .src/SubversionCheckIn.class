' Gambas class file

Public Root As SubversionRoot
Public RootObserver As Observer

Public Sub _new()

  With List

    .Columns.Count = 4

    With List.Columns[1]
      .Text = ("Status")
      .Alignment = Align.Center
      .Width = 120
    End With

    With List.Columns[2]
      .Text = ("Size")
      .Alignment = Align.Right
      .Width = 80
    End With

    With List.Columns[3]
      .Text = ("Modified")
      .Alignment = Align.Center
      .Width = 150
    End With

  End With

End

Public Sub Form_Open()

  Try WorkingDirectory.text = Args[1]
  Me.Update_User_Interface

End

Public Sub PickWorkingDirectory_Click()

  Dim Credentials As SubversionCredentials

  Try Dialog.Path = WorkingDirectory.text
  If Not Dialog.SelectDirectory() Then

    If Repository.Text And If Not WorkingDirectory.Text And If Message.Question("Checkout:\n\"" & Repository.Text & "\"\nto: \n\"" & Dialog.Path & "\"", "Yes", "No") = 1

      Credentials = New SubversionCredentials(Repository.Text)
      Credentials.ShowIfRequired()
      If Not Credentials.IsCancelled Then

        Me.Mouse = Mouse.Wait

        Me.Root = New SubversionRoot(WorkingDirectory.Text)
        Me.RootObserver = New Observer(Me.Root, True) As "RootObserver"
        Me.Root.Checkout(Repository.text, Dialog.Path, Credentials.UserName.Text, Credentials.Password.text)

        Me.Mouse = Mouse.Default

      Endif

    Endif

    WorkingDirectory.text = Dialog.Path
  Endif

End

Public Sub WorkingDirectory_Change()

  Me.LoadFromSubversionAndDisplay()

End

Public Sub LoadFromSubversionAndDisplay()

  Dim SvnFile As SubversionFile

  If Exist(WorkingDirectory.text) Then

    Me.Root = New SubversionRoot(WorkingDirectory.Text)
    Me.RootObserver = New Observer(Me.Root, True) As "RootObserver"
    Me.Root.LoadFromSubversion()

    List.Clear
    Tree.Clear
    Revision.text = ""
    Commit.Enabled = False

    If Me.Root.Files.Count > 0 Then

      With Me.Root.Files[0]
        Try Revision.Text = Subst(("Revision: &1 - Author: &2 - Date: &3"), .Revision, .Author, Format(.CommitDate, ("d mmmm yyyy hh:nn:ss")))
      End With

      For Each SvnFile In Me.Root.Files
        With SvnFile

          If Not .IsSquiggle() Then
            Tree.Add(.FullPath, .FileName, .GetPicture(), .GetParent()).Expanded = Me.Root.Should_Parent_Expand(.FullPath)
          End If

          If .IsCommitable() Then
            .IsChecked = True
            List.Add(.FullPath, .FullPath, .GetCheckedPicture())
            List[.FullPath][1] = .StatusDisplay()
            List[.FullPath][2] = .SizeDisplay()
            List[.FullPath][3] = .DateDisplay()
          Endif

        End With
      Next
    Endif
  Endif

  Me.Update_User_Interface()

End

Public Sub CommitMessage_Change()

  Me.Update_User_Interface()

End

Public Sub Update_User_Interface()

  Update.Enabled = False
  Commit.Enabled = False
  Refresh.Enabled = WorkingDirectory.text <> ""

  If Not IsNull(Me.Root) Then
    Commit.Enabled = List.Count > 0 And CommitMessage.text <> Null And Me.Root.SelectedCount() > 0
    Update.Enabled = Me.Root.IsConnected
    Repository.text = Me.Root.RepositoryUrl
  Endif

End

Public Sub Commit_Click()

  Dim Credentials As SubversionCredentials

  If Not IsNull(Me.Root) Then

    Credentials = New SubversionCredentials(Repository.Text)
    Credentials.ShowIfRequired()
    If Not Credentials.IsCancelled Then

      Me.Mouse = Mouse.Wait

      Clipboard.Copy(CommitMessage.Text)
      Me.Root.Commit(CommitMessage.Text, True, Credentials.UserName.Text, Credentials.Password.Text)
      CommitMessage.Clear
      Me.LoadFromSubversionAndDisplay()

      Me.Mouse = Mouse.Default
      Message.Info(("Committed!"))

    End If

  Endif

End

Public Sub Update_Click()

  Dim Credentials As SubversionCredentials

  If Not IsNull(Me.Root) Then

    Credentials = New SubversionCredentials(Repository.Text)
    Credentials.ShowIfRequired()
    If Not Credentials.IsCancelled Then

      Me.Mouse = Mouse.Wait
      Me.Root.Update(Credentials.UserName.Text, Credentials.Password.Text)
      Me.Mouse = Mouse.Default

      Me.LoadFromSubversionAndDisplay()
      Message.Info(("Updated!"))

    Endif
  Endif

End

Public Sub Refresh_Click()

  Me.LoadFromSubversionAndDisplay()
  Message.Info(("Refreshed!"))

End

Public Sub List_DblClick()

  Dim Item As SubversionFile

  If Not IsNull(Me.root)
    Try Item = Me.Root.GetFile(List.Current.Key)
    If Not IsNull(Item) Then
      Item.IsChecked = Not Item.IsChecked
      List.Current.Picture = Item.GetCheckedPicture()
      Me.Update_User_Interface()
    Endif
  End If

End

Public Sub BrowseToRepository_Click()

  If Not IsNull(Me.Root) And If Lower(Repository.text) = Lower(Me.Root.RepositoryUrl) Then
    Desktop.Open(Me.Root.RepositoryRootUrl)
  Else If Repository.Text
    Desktop.Open(Repository.Text)
  Endif

End

Public Sub ListDiff_Click()

  If Not IsNull(Me.root)
    Me.Root.Diff(List.Current.Key)
  End If

End

Public Sub ListRevert_Click()

  If Not IsNull(Me.root)
    Me.Root.Revert(List.Current.Key)
    Me.LoadFromSubversionAndDisplay()
  End If

End

Public Sub TreeDiff_Click()

  If Not IsNull(Me.root)
    Me.Root.Diff(Tree.Current.Key)
  End If

End

Public Sub TreeRevert_Click()

  If Not IsNull(Me.root)
    Me.Root.Revert(Tree.Current.Key)
    Me.LoadFromSubversionAndDisplay()
  End If

End

Public Sub RootObserver_Progress(Value As String)

  Commands.text &= Value & "\n"

End Sub
