' Gambas class file

Public WorkingDirectory As String
Public Files As New SubversionFile[]

Public Sub _new(WorkingDirectory As String)

  Me.WorkingDirectory = WorkingDirectory

End

Public Sub LoadFromSubversion()

  Me.Files.Clear
  Me.Load_Subversion_Information()
  Me.Add_Any_Unversioned_Missing_Files()
  Me.Add_FileName_RelativePath_IsFolder_ModifiedDate_And_Size()

End

Public Sub Load_Subversion_Information()

  Dim File As SubversionFile

  Dim xml As String
  Dim xDoc As New XmlDocument

  Dim Entry As XmlNode
  Dim Status As XmlNode
  Dim Commit As XmlNode
  Dim Value As XmlNode

  Shell "svn status --verbose --xml \"" & Me.WorkingDirectory & "\"" Wait To xml
  xDoc.FromString(xml)

  For Each Entry In xDoc.GetElementsByTagName("entry")

    File = New SubversionFile
    File.FullPath = Entry.Attributes["path"]

    For Each Status In Entry.ChildNodes
      If Status.Name = "wc-status" Then

        File.Status = Status.Attributes["item"]
        File.Props = Status.Attributes["props"]

        For Each Commit In Status.ChildNodes
          If Commit.Name = "commit" Then

            File.Revision = CInt(Commit.Attributes["revision"])

            For Each Value In Commit.ChildNodes

              If Value.Name = "author" Then
                File.Author = Value.Value

              Else If Value.Name = "date" Then

                '2017-02-21T17:14:53.000000Z
                Try File.CommitDate = Date(Left(Value.Value, 4), Right(Left(Value.value, 7), 2), Right(Left(Value.value, 10), 2),
                  Right(Left(Value.value, 13), 2), Right(Left(Value.value, 16), 2), Right(Left(Value.value, 19), 2))

              Endif

            Next
          Endif
        Next
      End If
    Next

    Me.Files.Add(File)
  Next

End

Public Sub Add_Any_Unversioned_Missing_Files()

  Dim FileName As String
  Dim FullPath As String
  Dim FileFound As Boolean
  Dim File As SubversionFile

  For Each FileName In RDir(Me.WorkingDirectory)
    If Lower(Left(FileName, 4)) <> ".svn" Then

      FullPath = Me.WorkingDirectory &/ FileName
      FileFound = False

      For Each File In Me.Files
        If Lower(File.FullPath) = Lower(FullPath) Then
          FileFound = True
          Break
        Endif
      Next

      If Not FileFound Then
        File = New SubversionFile
        File.FullPath = FullPath
        File.Status = "unversioned"
        Me.Files.Add(File)
      Endif

    End If
  Next

End

Public Sub Add_FileName_RelativePath_IsFolder_ModifiedDate_And_Size()

  Dim File As SubversionFile

  For Each File In Me.Files
    File.FileName = Right(File.FullPath, - RInStr(File.FullPath, "/"))
    File.FolderName = Right(Left(File.FullPath, - Len(File.FileName) - 1), - RInStr(Left(File.FullPath, - Len(File.FileName) - 1), "/"))
    File.RelativePath = Right(File.FullPath, - Len(Me.WorkingDirectory))
    File.IsFolder = IsDir(File.FullPath)
    If Not File.IsFolder Then
      With Stat(File.FullPath)
        File.ModifiedDate = .LastModified
        File.Size = .Size
      End With
    Endif
  Next

End

Public Function GetFile(FullPath As String) As SubversionFile

  Dim File As SubversionFile

  For Each File In Me.Files
    If File.FullPath = FullPath Then
      Return File
    Endif
  Next

  Return Null

End


Public Sub Update()

  Shell "svn update \"" & Me.WorkingDirectory & "\"" Wait

End

Public Sub Commit(Message As String, Optional UpdateAfter As Boolean = False)

  Dim File As SubversionFile

  For Each File In Me.Files
    If File.IsChecked And If File.IsUnversioned() Then
      Me.Add_All_Parent_Folders(File.GetParent())
      Shell "svn add \"" & File.FullPath & "\"" Wait
    Endif
  Next

  Shell "svn commit \"" & Me.WorkingDirectory & "\" --message \"" & Replace(message, "\"", "'") & "\"" Wait

  If UpdateAfter Then
    Me.Update
  Endif

End

Public Sub Add_All_Parent_Folders(FullPath As String)

  Dim Folder As SubversionFile = Me.GetFile(fullpath)

  If Not IsNull(folder) Then
    If Not Folder.VersionControlled() Then

      Me.Add_All_Parent_Folders(Folder.GetParent())
      Shell "svn add \"" & Folder.FullPath & "\" --depth=empty" Wait
      Folder.MarkAdded()

    Endif
  Endif

End


