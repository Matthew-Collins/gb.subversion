' Gambas class file

Public RepositoryRootUrl As String
Public RepositoryUrl As String
Public IsConnected As Boolean

Public WorkingDirectory As String
Public Files As New SubversionFile[]

Public Sub _new(MyWorkingDirectory As String)

  Me.WorkingDirectory = MyWorkingDirectory

End

Public Sub LoadFromSubversion()

  Me.Files.Clear
  Me.IsConnected = False
  Me.Load_Subversion_Information()
  Me.Load_Subversion_Status()
  Me.Add_Any_Unversioned_Missing_Files()
  Me.Add_FileName_RelativePath_IsFolder_ModifiedDate_And_Size()

End

Public Sub Load_Subversion_Information()

  Dim xml As String
  Dim xDoc As New XmlDocument

  Dim Entry As XmlNode
  Dim Node As XmlNode
  Dim Value As XmlNode

  Shell "svn info --xml \"" & Me.WorkingDirectory & "\"" Wait To xml
  xDoc.FromString(xml)

  For Each Entry In xDoc.GetElementsByTagName("entry")

    For Each Node In Entry.ChildNodes

      If Node.Name = "url" Then
        Me.RepositoryUrl = Node.Value

      Else If Node.Name = "repository"
        For Each Value In Node.ChildNodes

          If Value.Name = "root" Then
            Me.RepositoryRootUrl = Value.Value
            Me.IsConnected = True

          Endif

        Next

      End If
    Next

  Next

End

Public Sub Load_Subversion_Status()

  Dim SvnFile As SubversionFile

  Dim xml As String
  Dim xDoc As New XmlDocument

  Dim Entry As XmlNode
  Dim Status As XmlNode
  Dim Commits As XmlNode
  Dim Value As XmlNode

  Shell "svn status --verbose --xml \"" & Me.WorkingDirectory & "\"" Wait To xml
  xDoc.FromString(xml)

  For Each Entry In xDoc.GetElementsByTagName("entry")

    SvnFile = New SubversionFile
    SvnFile.FullPath = Entry.Attributes["path"]

    For Each Status In Entry.ChildNodes
      If Status.Name = "wc-status" Then

        SvnFile.Status = Status.Attributes["item"]
        SvnFile.Props = Status.Attributes["props"]

        For Each Commits In Status.ChildNodes
          If Commits.Name = "commit" Then

            SvnFile.Revision = CInt(Commits.Attributes["revision"])

            For Each Value In Commits.ChildNodes

              If Value.Name = "author" Then
                SvnFile.Author = Value.Value

              Else If Value.Name = "date" Then

                '2017-02-21T17:14:53.000000Z
                Try SvnFile.CommitDate = Date(Left(Value.Value, 4), Right(Left(Value.value, 7), 2), Right(Left(Value.value, 10), 2),
                  Right(Left(Value.value, 13), 2), Right(Left(Value.value, 16), 2), Right(Left(Value.value, 19), 2))

              Endif

            Next
          Endif
        Next
      End If
    Next

    Me.Files.Add(SvnFile)
  Next

End

Public Sub Add_Any_Unversioned_Missing_Files()

  Dim FileName As String
  Dim FullPath As String
  Dim FileFound As Boolean
  Dim SvnFile As SubversionFile

  For Each FileName In RDir(Me.WorkingDirectory)
    If Lower(Left(FileName, 4)) <> ".svn" Then

      FullPath = Me.WorkingDirectory &/ FileName
      FileFound = False

      For Each SvnFile In Me.Files
        If Lower(SvnFile.FullPath) = Lower(FullPath) Then
          FileFound = True
          Break
        Endif
      Next

      If Not FileFound Then
        SvnFile = New SubversionFile
        SvnFile.FullPath = FullPath
        SvnFile.Status = "unversioned"
        Me.Files.Add(SvnFile)
      Endif

    End If
  Next

End

Public Sub Add_FileName_RelativePath_IsFolder_ModifiedDate_And_Size()

  Dim SvnFile As SubversionFile

  For Each SvnFile In Me.Files
    SvnFile.FileName = Right(SvnFile.FullPath, - RInStr(SvnFile.FullPath, "/"))
    SvnFile.FolderName = Right(Left(SvnFile.FullPath, - Len(SvnFile.FileName) - 1), - RInStr(Left(SvnFile.FullPath, - Len(SvnFile.FileName) - 1), "/"))
    SvnFile.RelativePath = Right(SvnFile.FullPath, - Len(Me.WorkingDirectory))
    SvnFile.IsFolder = IsDir(SvnFile.FullPath)
    If Not SvnFile.IsFolder Then
      With Stat(SvnFile.FullPath)
        SvnFile.ModifiedDate = .LastModified
        SvnFile.Size = .Size
      End With
    Endif
  Next

End

Public Function GetFile(FullPath As String) As SubversionFile

  Dim SvnFile As SubversionFile

  For Each SvnFile In Me.Files
    If SvnFile.FullPath = FullPath Then
      Return SvnFile
    Endif
  Next

  Return Null

End


Public Sub Update()

  Shell "svn update \"" & Me.WorkingDirectory & "\"" Wait

End

Public Sub Commit(CommitMessage As String, Optional UpdateAfter As Boolean = False)

  Dim SvnFile As SubversionFile

  For Each SvnFile In Me.Files
    If SvnFile.IsChecked And If SvnFile.IsUnversioned() Then
      Me.Add_All_Parent_Folders(SvnFile.GetParent())
      Shell "svn add \"" & SvnFile.FullPath & "\"" Wait
    Else If SvnFile.IsChecked And If SvnFile.IsIgnored() Then
      Shell "svn delete \"" & SvnFile.FullPath & "\" --force" Wait
    Endif
  Next

  Shell "svn commit \"" & Me.WorkingDirectory & "\" --message \"" & Replace(CommitMessage, "\"", "'") & "\"" Wait

  If UpdateAfter Then
    Me.Update
  Endif

End

Public Sub Add_All_Parent_Folders(FullPath As String)

  Dim Folder As SubversionFile = Me.GetFile(fullpath)

  If Not IsNull(folder) Then
    If Not Folder.VersionControlled() Then

      Me.Add_All_Parent_Folders(Folder.GetParent())
      Shell "svn add \"" & Folder.FullPath & "\" --depth=empty" Wait
      Folder.MarkAdded()

    Endif
  Endif

End

Public Function Should_Parent_Expand(Parent As String) As Boolean

  Dim SvnFile As SubversionFile

  For Each SvnFile In Me.Files
    If SvnFile.GetParent() = Parent Then
      If Not SvnFile.IsIgnored() Then
        Return True
      Endif
      If SvnFile.IsFolder And If Me.Should_Parent_Expand(SvnFile.FullPath) Then
        Return True
      Endif
    Endif
  Next

End


